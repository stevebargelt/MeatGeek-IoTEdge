{
  "source": 2,
  "revision": 5,
  "description": null,
  "createdBy": {
    "displayName": "Steve Bargelt",
    "url": "https://spsprodcus2.vssps.visualstudio.com/A9f721afa-3fb3-4841-bec5-0cddca67aa60/_apis/Identities/bdd9d9c3-f41a-6567-b301-c8478660b0d1",
    "_links": {
      "avatar": {
        "href": "https://dev.azure.com/stevenbargelt/_apis/GraphProfile/MemberAvatars/msa.YmRkOWQ5YzMtZjQxYS03NTY3LWIzMDEtYzg0Nzg2NjBiMGQx"
      }
    },
    "id": "bdd9d9c3-f41a-6567-b301-c8478660b0d1",
    "uniqueName": "steven.bargelt@pse.com",
    "imageUrl": "https://dev.azure.com/stevenbargelt/_apis/GraphProfile/MemberAvatars/msa.YmRkOWQ5YzMtZjQxYS03NTY3LWIzMDEtYzg0Nzg2NjBiMGQx",
    "descriptor": "msa.YmRkOWQ5YzMtZjQxYS03NTY3LWIzMDEtYzg0Nzg2NjBiMGQx"
  },
  "createdOn": "2020-11-03T16:50:14.503Z",
  "modifiedBy": {
    "displayName": "Steve Bargelt",
    "url": "https://spsprodcus2.vssps.visualstudio.com/A9f721afa-3fb3-4841-bec5-0cddca67aa60/_apis/Identities/bdd9d9c3-f41a-6567-b301-c8478660b0d1",
    "_links": {
      "avatar": {
        "href": "https://dev.azure.com/stevenbargelt/_apis/GraphProfile/MemberAvatars/msa.YmRkOWQ5YzMtZjQxYS03NTY3LWIzMDEtYzg0Nzg2NjBiMGQx"
      }
    },
    "id": "bdd9d9c3-f41a-6567-b301-c8478660b0d1",
    "uniqueName": "steven.bargelt@pse.com",
    "imageUrl": "https://dev.azure.com/stevenbargelt/_apis/GraphProfile/MemberAvatars/msa.YmRkOWQ5YzMtZjQxYS03NTY3LWIzMDEtYzg0Nzg2NjBiMGQx",
    "descriptor": "msa.YmRkOWQ5YzMtZjQxYS03NTY3LWIzMDEtYzg0Nzg2NjBiMGQx"
  },
  "modifiedOn": "2019-06-11T00:16:03.340Z",
  "isDeleted": false,
  "variables": {
    "acr.host": { "value": "<YourAzureContainerRegistryHost>" },
    "acr.password": { "value": "<YourAzureContainerRegistryPassword>" },
    "acr.user": { "value": "<YourAzureContainerRegistryUser>" },
    "appinsights.instrumentationkey": {
      "value": "<YourAppInsightsInstrumentationKey>"
    },
    "deployment_name": { "value": "azuredevops-deployment-qa" },
    "environment": { "value": "qa" },
    "iothub_name": { "value": "<YourIoTHub>" },
    "spAppUrl": { "value": "<YourServicePrincipalAppUrl>" },
    "spPassword": { "value": "<YourServicePrincipalPassword" },
    "subscriptionId": { "value": "<YourSubscriptionId>" },
    "tenantId": { "value": "<YourTenantId>" }
  },
  "variableGroups": [],
  "environments": [
    {
      "id": 2,
      "name": "Create Deployment",
      "rank": 1,
      "owner": {
        "displayName": "Steve Bargelt",
        "url": "https://spsprodcus2.vssps.visualstudio.com/A9f721afa-3fb3-4841-bec5-0cddca67aa60/_apis/Identities/bdd9d9c3-f41a-6567-b301-c8478660b0d1",
        "_links": {
          "avatar": {
            "href": "https://dev.azure.com/stevenbargelt/_apis/GraphProfile/MemberAvatars/msa.YmRkOWQ5YzMtZjQxYS03NTY3LWIzMDEtYzg0Nzg2NjBiMGQx"
          }
        },
        "id": "bdd9d9c3-f41a-6567-b301-c8478660b0d1",
        "uniqueName": "steven.bargelt@pse.com",
        "imageUrl": "https://dev.azure.com/stevenbargelt/_apis/GraphProfile/MemberAvatars/msa.YmRkOWQ5YzMtZjQxYS03NTY3LWIzMDEtYzg0Nzg2NjBiMGQx",
        "descriptor": "msa.YmRkOWQ5YzMtZjQxYS03NTY3LWIzMDEtYzg0Nzg2NjBiMGQx"
      },
      "variables": {},
      "variableGroups": [],
      "preDeployApprovals": {
        "approvals": [
          { "rank": 1, "isAutomated": true, "isNotificationOn": false, "id": 4 }
        ],
        "approvalOptions": {
          "requiredApproverCount": null,
          "releaseCreatorCanBeApprover": true,
          "autoTriggeredAndPreviousEnvironmentApprovedCanBeSkipped": false,
          "enforceIdentityRevalidation": false,
          "timeoutInMinutes": 0,
          "executionOrder": 1
        }
      },
      "deployStep": { "id": 7 },
      "postDeployApprovals": {
        "approvals": [
          { "rank": 1, "isAutomated": true, "isNotificationOn": false, "id": 8 }
        ],
        "approvalOptions": {
          "requiredApproverCount": null,
          "releaseCreatorCanBeApprover": true,
          "autoTriggeredAndPreviousEnvironmentApprovedCanBeSkipped": false,
          "enforceIdentityRevalidation": false,
          "timeoutInMinutes": 0,
          "executionOrder": 2
        }
      },
      "deployPhases": [
        {
          "deploymentInput": {
            "parallelExecution": { "parallelExecutionType": 0 },
            "agentSpecification": null,
            "skipArtifactsDownload": false,
            "artifactsDownloadInput": { "downloadInputs": [] },
            "queueId": 52,
            "demands": [],
            "enableAccessToken": false,
            "timeoutInMinutes": 0,
            "jobCancelTimeoutInMinutes": 1,
            "condition": "succeeded()",
            "overrideInputs": {}
          },
          "rank": 1,
          "phaseType": 1,
          "name": "Agent job",
          "refName": null,
          "workflowTasks": [
            {
              "environment": {},
              "taskId": "a8515ec8-7254-4ffd-912c-86772e2b5962",
              "version": "3.*",
              "name": "Replace tokens in deployment.template.json",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "rootDirectory": "$(System.DefaultWorkingDirectory)/$(Release.PrimaryArtifactSourceAlias)/drop/EdgeSolution",
                "targetFiles": "deployment.template.json",
                "encoding": "auto",
                "writeBOM": "true",
                "verbosity": "normal",
                "actionOnMissing": "warn",
                "keepToken": "false",
                "tokenPrefix": "#{",
                "tokenSuffix": "}#",
                "emptyValue": "(empty)",
                "escapeType": "none",
                "escapeChar": "",
                "charsToEscape": ""
              }
            },
            {
              "environment": {},
              "taskId": "a8515ec8-7254-4ffd-912c-86772e2b5962",
              "version": "3.*",
              "name": "Replace tokens in modules/**/module.json",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "rootDirectory": "$(System.DefaultWorkingDirectory)/$(Release.PrimaryArtifactSourceAlias)/drop/EdgeSolution",
                "targetFiles": "modules/**/module.json",
                "encoding": "auto",
                "writeBOM": "true",
                "verbosity": "normal",
                "actionOnMissing": "warn",
                "keepToken": "false",
                "tokenPrefix": "#{",
                "tokenSuffix": "}#",
                "emptyValue": "(empty)",
                "escapeType": "none",
                "escapeChar": "",
                "charsToEscape": ""
              }
            },
            {
              "environment": {},
              "taskId": "80f3f6a0-82a6-4a22-ba7a-e5b8c541b9b8",
              "version": "2.*",
              "name": "Azure IoT Edge - Build module images",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "action": "Build module images",
                "deploymentFilePath": "$(System.DefaultWorkingDirectory)/**/*.json",
                "connectedServiceNameARM": "",
                "iothubname": "",
                "deploymentid": "vsts-deployment",
                "priority": "0",
                "deviceOption": "",
                "deviceId": "",
                "targetcondition": "",
                "containerregistrytype": "Azure Container Registry",
                "dockerRegistryEndpoint": "",
                "azureSubscriptionEndpoint": "",
                "azureContainerRegistry": "",
                "templateFilePath": "$(System.DefaultWorkingDirectory)/$(Release.PrimaryArtifactSourceAlias)/drop/EdgeSolution/deployment.template.json",
                "defaultPlatform": "amd64",
                "bypassModules": ""
              }
            },
            {
              "environment": {},
              "taskId": "80f3f6a0-82a6-4a22-ba7a-e5b8c541b9b8",
              "version": "2.*",
              "name": "Azure IoT Edge - Push module images",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "action": "Push module images",
                "deploymentFilePath": "$(System.DefaultWorkingDirectory)/**/*.json",
                "connectedServiceNameARM": "",
                "iothubname": "",
                "deploymentid": "vsts-deployment",
                "priority": "0",
                "deviceOption": "",
                "deviceId": "",
                "targetcondition": "",
                "containerregistrytype": "Azure Container Registry",
                "dockerRegistryEndpoint": "",
                "azureSubscriptionEndpoint": "04161892-425e-4034-861e-2bb1abd04aaf",
                "azureContainerRegistry": "{\"loginServer\":\"iotedgedevops.azurecr.io\", \"id\" : \"/subscriptions/eeee70ae-d385-4b32-80fe-db748e7c3c06/resourceGroups/IoTEdge-DevOps/providers/Microsoft.ContainerRegistry/registries/IoTEdgeDevOps\"}",
                "templateFilePath": "$(System.DefaultWorkingDirectory)/$(Release.PrimaryArtifactSourceAlias)/drop/EdgeSolution/deployment.template.json",
                "defaultPlatform": "amd64",
                "bypassModules": ""
              }
            },
            {
              "environment": {},
              "taskId": "80f3f6a0-82a6-4a22-ba7a-e5b8c541b9b8",
              "version": "2.*",
              "name": "Azure IoT Edge - Deploy to IoT Edge devices",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "action": "Deploy to IoT Edge devices",
                "deploymentFilePath": "$(System.DefaultWorkingDirectory)/**/*.json",
                "connectedServiceNameARM": "04161892-425e-4034-861e-2bb1abd04aaf",
                "iothubname": "$(iothub_name)",
                "deploymentid": "$(deployment_name)",
                "priority": "0",
                "deviceOption": "Multiple Devices",
                "deviceId": "",
                "targetcondition": "tags.environment='qa'",
                "containerregistrytype": "Azure Container Registry",
                "dockerRegistryEndpoint": "",
                "azureSubscriptionEndpoint": "",
                "azureContainerRegistry": "",
                "templateFilePath": "deployment.template.json",
                "defaultPlatform": "amd64",
                "bypassModules": ""
              }
            }
          ]
        }
      ],
      "environmentOptions": {
        "emailNotificationType": "OnlyOnFailure",
        "emailRecipients": "release.environment.owner;release.creator",
        "skipArtifactsDownload": false,
        "timeoutInMinutes": 0,
        "enableAccessToken": false,
        "publishDeploymentStatus": true,
        "badgeEnabled": false,
        "autoLinkWorkItems": false,
        "pullRequestDeploymentEnabled": false
      },
      "demands": [],
      "conditions": [
        { "name": "ReleaseStarted", "conditionType": 1, "value": "" }
      ],
      "executionPolicy": { "concurrencyCount": 1, "queueDepthCount": 0 },
      "schedules": [],
      "currentRelease": {
        "id": 7,
        "url": "https://pdecarlo.vsrm.visualstudio.com/4588126a-cb10-4f03-997b-b622917d773b/_apis/Release/releases/7",
        "_links": {}
      },
      "retentionPolicy": {
        "daysToKeep": 30,
        "releasesToKeep": 3,
        "retainBuild": true
      },
      "processParameters": {},
      "properties": {},
      "preDeploymentGates": { "id": 0, "gatesOptions": null, "gates": [] },
      "postDeploymentGates": { "id": 0, "gatesOptions": null, "gates": [] },
      "environmentTriggers": [],
      "badgeUrl": "https://pdecarlo.vsrm.visualstudio.com/_apis/public/Release/badge/4588126a-cb10-4f03-997b-b622917d773b/2/2"
    },
    {
      "id": 3,
      "name": "Smoke Test",
      "rank": 2,
      "owner": {
        "displayName": "Steve Bargelt",
        "url": "https://spsprodcus2.vssps.visualstudio.com/A9f721afa-3fb3-4841-bec5-0cddca67aa60/_apis/Identities/bdd9d9c3-f41a-6567-b301-c8478660b0d1",
        "_links": {
          "avatar": {
            "href": "https://dev.azure.com/stevenbargelt/_apis/GraphProfile/MemberAvatars/msa.YmRkOWQ5YzMtZjQxYS03NTY3LWIzMDEtYzg0Nzg2NjBiMGQx"
          }
        },
        "id": "bdd9d9c3-f41a-6567-b301-c8478660b0d1",
        "uniqueName": "steven.bargelt@pse.com",
        "imageUrl": "https://dev.azure.com/stevenbargelt/_apis/GraphProfile/MemberAvatars/msa.YmRkOWQ5YzMtZjQxYS03NTY3LWIzMDEtYzg0Nzg2NjBiMGQx",
        "descriptor": "msa.YmRkOWQ5YzMtZjQxYS03NTY3LWIzMDEtYzg0Nzg2NjBiMGQx"
      },
      "variables": {},
      "variableGroups": [],
      "preDeployApprovals": {
        "approvals": [
          { "rank": 1, "isAutomated": true, "isNotificationOn": false, "id": 5 }
        ],
        "approvalOptions": {
          "requiredApproverCount": null,
          "releaseCreatorCanBeApprover": true,
          "autoTriggeredAndPreviousEnvironmentApprovedCanBeSkipped": false,
          "enforceIdentityRevalidation": false,
          "timeoutInMinutes": 0,
          "executionOrder": 1
        }
      },
      "deployStep": { "id": 6 },
      "postDeployApprovals": {
        "approvals": [
          { "rank": 1, "isAutomated": true, "isNotificationOn": false, "id": 9 }
        ],
        "approvalOptions": {
          "requiredApproverCount": null,
          "releaseCreatorCanBeApprover": true,
          "autoTriggeredAndPreviousEnvironmentApprovedCanBeSkipped": false,
          "enforceIdentityRevalidation": false,
          "timeoutInMinutes": 0,
          "executionOrder": 2
        }
      },
      "deployPhases": [
        {
          "deploymentInput": {
            "parallelExecution": { "parallelExecutionType": 0 },
            "agentSpecification": null,
            "skipArtifactsDownload": false,
            "artifactsDownloadInput": { "downloadInputs": [] },
            "queueId": 52,
            "demands": [],
            "enableAccessToken": false,
            "timeoutInMinutes": 0,
            "jobCancelTimeoutInMinutes": 1,
            "condition": "succeeded()",
            "overrideInputs": {}
          },
          "rank": 1,
          "phaseType": 1,
          "name": "Agent job",
          "refName": null,
          "workflowTasks": [
            {
              "environment": {},
              "taskId": "46e4be58-730b-4389-8a2f-ea10b3e5e815",
              "version": "1.*",
              "name": "Remove all registered QA devices",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "connectedServiceNameARM": "04161892-425e-4034-861e-2bb1abd04aaf",
                "scriptLocation": "scriptPath",
                "scriptPath": "$(System.DefaultWorkingDirectory)/$(Release.PrimaryArtifactSourceAlias)/drop/scripts/edgeRemoveQADevices.sh",
                "inlineScript": "",
                "args": "$(iothub_name) $(environment)",
                "addSpnToEnvironment": "false",
                "useGlobalConfig": "false",
                "cwd": "",
                "failOnStandardError": "false"
              }
            },
            {
              "environment": {},
              "taskId": "e28912f1-0114-4464-802a-a3a35437fd16",
              "version": "1.*",
              "name": "Run an azure-iot-edge-device-container instance",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "containerregistrytype": "Container Registry",
                "dockerRegistryEndpoint": "",
                "azureSubscriptionEndpoint": "",
                "azureContainerRegistry": "",
                "command": "Run an image",
                "dockerFile": "**/Dockerfile",
                "arguments": "",
                "pushMultipleImages": "false",
                "tagMultipleImages": "false",
                "imageName": "toolboc/azure-iot-edge-device-container",
                "imageNamesPath": "",
                "qualifyImageName": "true",
                "includeSourceTags": "false",
                "includeLatestTag": "false",
                "addDefaultLabels": "true",
                "useDefaultContext": "true",
                "buildContext": "",
                "imageDigestFile": "",
                "containerName": "qa-test",
                "ports": "",
                "volumes": "/var/run/docker.sock:/var/run/docker.sock",
                "envVars": "spAppUrl=$(spAppUrl)\nspPassword=$(spPassword)\ntenantId=$(tenantId)\nsubscriptionId=$(subscriptionId)\niothub_name=$(iothub_name)\nenvironment=$(environment)",
                "workingDirectory": "",
                "entrypointOverride": "",
                "containerCommand": "",
                "runInBackground": "true",
                "restartPolicy": "no",
                "maxRestartRetries": "",
                "dockerHostEndpoint": "",
                "enforceDockerNamingConvention": "true",
                "memoryLimit": ""
              }
            },
            {
              "environment": {},
              "taskId": "6c731c3c-3c68-459a-a5c9-bde6e6595b5b",
              "version": "3.*",
              "name": "Sleep for 30 seconds to allow device to register",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 1,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "targetType": "inline",
                "filePath": "",
                "arguments": "",
                "script": "# Write your commands here\n\n# Use the environment variables input below to pass secret variables to this script\n\nsleep 30",
                "workingDirectory": "",
                "failOnStderr": "false",
                "noProfile": "true",
                "noRc": "true"
              }
            },
            {
              "environment": {},
              "taskId": "46e4be58-730b-4389-8a2f-ea10b3e5e815",
              "version": "1.*",
              "name": "Smoke Test",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "connectedServiceNameARM": "04161892-425e-4034-861e-2bb1abd04aaf",
                "scriptLocation": "scriptPath",
                "scriptPath": "$(System.DefaultWorkingDirectory)/$(Release.PrimaryArtifactSourceAlias)/drop/scripts/edgeSmokeTest.sh",
                "inlineScript": "",
                "args": "$(iothub_name) $(environment) $(deployment_name)",
                "addSpnToEnvironment": "false",
                "useGlobalConfig": "false",
                "cwd": "",
                "failOnStandardError": "false"
              }
            }
          ]
        }
      ],
      "environmentOptions": {
        "emailNotificationType": "OnlyOnFailure",
        "emailRecipients": "release.environment.owner;release.creator",
        "skipArtifactsDownload": false,
        "timeoutInMinutes": 0,
        "enableAccessToken": false,
        "publishDeploymentStatus": true,
        "badgeEnabled": false,
        "autoLinkWorkItems": false,
        "pullRequestDeploymentEnabled": false
      },
      "demands": [],
      "conditions": [
        { "name": "Create Deployment", "conditionType": 2, "value": "4" }
      ],
      "executionPolicy": { "concurrencyCount": 1, "queueDepthCount": 0 },
      "schedules": [],
      "currentRelease": {
        "id": 7,
        "url": "https://pdecarlo.vsrm.visualstudio.com/4588126a-cb10-4f03-997b-b622917d773b/_apis/Release/releases/7",
        "_links": {}
      },
      "retentionPolicy": {
        "daysToKeep": 30,
        "releasesToKeep": 3,
        "retainBuild": true
      },
      "processParameters": {
        "dataSourceBindings": [
          {
            "parameters": {},
            "endpointId": "$(azureSubscriptionEndpoint)",
            "target": "kubernetesCluster",
            "resultTemplate": "{{{name}}}",
            "endpointUrl": "{{{endpoint.url}}}/subscriptions/{{{endpoint.subscriptionId}}}/resourceGroups/$(azureResourceGroup)/providers/Microsoft.ContainerService/managedClusters?api-version=2017-08-31",
            "resultSelector": "jsonpath:$.value[*]"
          },
          {
            "parameters": {},
            "endpointId": "$(azureSubscriptionEndpoint)",
            "target": "azureResourceGroup",
            "resultTemplate": "{{{ #extractResource id resourcegroups}}}",
            "endpointUrl": "{{{endpoint.url}}}/subscriptions/{{{endpoint.subscriptionId}}}/providers/Microsoft.ContainerService/managedClusters?api-version=2017-08-31",
            "resultSelector": "jsonpath:$.value[*]"
          }
        ]
      },
      "properties": {},
      "preDeploymentGates": { "id": 0, "gatesOptions": null, "gates": [] },
      "postDeploymentGates": { "id": 0, "gatesOptions": null, "gates": [] },
      "environmentTriggers": [],
      "badgeUrl": "https://pdecarlo.vsrm.visualstudio.com/_apis/public/Release/badge/4588126a-cb10-4f03-997b-b622917d773b/2/3"
    }
  ],
  "artifacts": [],
  "triggers": [],
  "releaseNameFormat": "Release-$(rev:r)",
  "tags": [],
  "pipelineProcess": { "type": 1 },
  "properties": {
    "DefinitionCreationSource": {
      "$type": "System.String",
      "$value": "ReleaseImport"
    }
  },
  "id": 2,
  "name": "Release Pipeline",
  "path": "\\",
  "projectReference": null,
  "url": "https://pdecarlo.vsrm.visualstudio.com/4588126a-cb10-4f03-997b-b622917d773b/_apis/Release/definitions/2",
  "_links": {
    "self": {
      "href": "https://pdecarlo.vsrm.visualstudio.com/4588126a-cb10-4f03-997b-b622917d773b/_apis/Release/definitions/2"
    },
    "web": {
      "href": "https://pdecarlo.visualstudio.com/4588126a-cb10-4f03-997b-b622917d773b/_release?definitionId=2"
    }
  }
}
